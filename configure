#！/bin/bash

root_dir="$(dirname "$0")"

##引入shell的ini功能
. "${root_dir}/scripts/sh_ini.sh"

print_help() {
    shini_parse "${root_dir}/config/easy_net_compile_config.ini"
    cat << END
Usage: ./configure [--option]

options:
  --prefix=PREFIX           (DEFAULT: $PREFIX)
  --with-MODULE
  --without-MODULE
  --enable-FEATURE
  --disable-FEATURE

modules:
  --with-http           compile http module?            (DEFAULT: $WITH_HTTP)
  --with-mqtt           compile mqtt module?            (DEFAULT: $WITH_MQTT)

features:
  --enable-uds          enable Unix Domain Socket?      (DEFAULT: $ENABLE_UDS)
END
}

##解析输入命令
if [ $# -lt 1 ];then
    print_help
    exit 255
fi

mkdir tmp 2>/dev/null
while [ -n "$1" ]
do
    opt="$1"
    KEY=""
    VAL=yes
    case $opt in
        --help)
            print_help
            exit 0
            ;;
        --prefix=*)
            KEY="PREFIX"
            VAL=${opt:9}
            ;;
        --with-*)
            KEY="WITH_${opt:7}"
            VAL=yes
            ;;
        --without-*)
            KEY="WITH_${opt:10}"
            VAL=no
            ;;
        --enable-*)
            KEY="ENABLE_${opt:9}"
            VAL=yes
            ;;
        --disable-*)
            KEY="ENABLE_${opt:10}"
            VAL=no
            ;;
        *)
            print_help
            exit 255
            ;;
    esac

    if [ -n $KEY ]; then
        FEATURE=$(echo "$KEY" | tr "a-z-" "A-Z_")
        if [ ! -f tmp/easy_net_compile_config.mk ]; then
            cp ${root_dir}/config/easy_net_compile_config.ini tmp/easy_net_compile_config.mk
        fi
        shini_write "tmp/easy_net_compile_config.mk" "" "$FEATURE" "$VAL"
    fi

    shift 1
done

# easy_net_compile_config.mk
echo "[easy_net_compile_config.mk]"
if [ -f tmp/easy_net_compile_config.mk ]; then
    mv tmp/easy_net_compile_config.mk easy_net_compile_config.mk
    shini_write "easy_net_compile_config.mk" "" "CONFIG_DATE" "$(date +%Y%m%d)"
    rm -r tmp
fi
cat easy_net_compile_config.mk
echo ""